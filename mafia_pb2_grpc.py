# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import mafia_pb2 as mafia__pb2


class MafiaStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Connect = channel.unary_unary(
                '/mafia.Mafia/Connect',
                request_serializer=mafia__pb2.ConnectRequest.SerializeToString,
                response_deserializer=mafia__pb2.ConnectResponse.FromString,
                )
        self.CreateGame = channel.unary_unary(
                '/mafia.Mafia/CreateGame',
                request_serializer=mafia__pb2.CreateGameRequest.SerializeToString,
                response_deserializer=mafia__pb2.CreateGameResponse.FromString,
                )
        self.JoinGame = channel.unary_unary(
                '/mafia.Mafia/JoinGame',
                request_serializer=mafia__pb2.JoinGameRequest.SerializeToString,
                response_deserializer=mafia__pb2.JoinGameResponse.FromString,
                )
        self.ListPlayers = channel.unary_unary(
                '/mafia.Mafia/ListPlayers',
                request_serializer=mafia__pb2.ListPlayersRequest.SerializeToString,
                response_deserializer=mafia__pb2.ListPlayersResponse.FromString,
                )
        self.GetRole = channel.unary_unary(
                '/mafia.Mafia/GetRole',
                request_serializer=mafia__pb2.GetRoleRequest.SerializeToString,
                response_deserializer=mafia__pb2.GetRoleResponse.FromString,
                )
        self.GameProcess = channel.unary_stream(
                '/mafia.Mafia/GameProcess',
                request_serializer=mafia__pb2.GameProcessRequest.SerializeToString,
                response_deserializer=mafia__pb2.GameProcessResponse.FromString,
                )
        self.VoteDay = channel.unary_unary(
                '/mafia.Mafia/VoteDay',
                request_serializer=mafia__pb2.VoteDayRequest.SerializeToString,
                response_deserializer=mafia__pb2.VoteDayResponse.FromString,
                )
        self.VoteNight = channel.unary_unary(
                '/mafia.Mafia/VoteNight',
                request_serializer=mafia__pb2.VoteNightRequest.SerializeToString,
                response_deserializer=mafia__pb2.VoteNightResponse.FromString,
                )
        self.Check = channel.unary_unary(
                '/mafia.Mafia/Check',
                request_serializer=mafia__pb2.CheckRequest.SerializeToString,
                response_deserializer=mafia__pb2.CheckResponse.FromString,
                )
        self.Publish = channel.unary_unary(
                '/mafia.Mafia/Publish',
                request_serializer=mafia__pb2.PublishRequest.SerializeToString,
                response_deserializer=mafia__pb2.PublishResponse.FromString,
                )


class MafiaServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Connect(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateGame(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def JoinGame(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListPlayers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRole(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GameProcess(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VoteDay(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VoteNight(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Check(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Publish(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MafiaServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Connect': grpc.unary_unary_rpc_method_handler(
                    servicer.Connect,
                    request_deserializer=mafia__pb2.ConnectRequest.FromString,
                    response_serializer=mafia__pb2.ConnectResponse.SerializeToString,
            ),
            'CreateGame': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateGame,
                    request_deserializer=mafia__pb2.CreateGameRequest.FromString,
                    response_serializer=mafia__pb2.CreateGameResponse.SerializeToString,
            ),
            'JoinGame': grpc.unary_unary_rpc_method_handler(
                    servicer.JoinGame,
                    request_deserializer=mafia__pb2.JoinGameRequest.FromString,
                    response_serializer=mafia__pb2.JoinGameResponse.SerializeToString,
            ),
            'ListPlayers': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPlayers,
                    request_deserializer=mafia__pb2.ListPlayersRequest.FromString,
                    response_serializer=mafia__pb2.ListPlayersResponse.SerializeToString,
            ),
            'GetRole': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRole,
                    request_deserializer=mafia__pb2.GetRoleRequest.FromString,
                    response_serializer=mafia__pb2.GetRoleResponse.SerializeToString,
            ),
            'GameProcess': grpc.unary_stream_rpc_method_handler(
                    servicer.GameProcess,
                    request_deserializer=mafia__pb2.GameProcessRequest.FromString,
                    response_serializer=mafia__pb2.GameProcessResponse.SerializeToString,
            ),
            'VoteDay': grpc.unary_unary_rpc_method_handler(
                    servicer.VoteDay,
                    request_deserializer=mafia__pb2.VoteDayRequest.FromString,
                    response_serializer=mafia__pb2.VoteDayResponse.SerializeToString,
            ),
            'VoteNight': grpc.unary_unary_rpc_method_handler(
                    servicer.VoteNight,
                    request_deserializer=mafia__pb2.VoteNightRequest.FromString,
                    response_serializer=mafia__pb2.VoteNightResponse.SerializeToString,
            ),
            'Check': grpc.unary_unary_rpc_method_handler(
                    servicer.Check,
                    request_deserializer=mafia__pb2.CheckRequest.FromString,
                    response_serializer=mafia__pb2.CheckResponse.SerializeToString,
            ),
            'Publish': grpc.unary_unary_rpc_method_handler(
                    servicer.Publish,
                    request_deserializer=mafia__pb2.PublishRequest.FromString,
                    response_serializer=mafia__pb2.PublishResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'mafia.Mafia', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Mafia(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Connect(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mafia.Mafia/Connect',
            mafia__pb2.ConnectRequest.SerializeToString,
            mafia__pb2.ConnectResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateGame(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mafia.Mafia/CreateGame',
            mafia__pb2.CreateGameRequest.SerializeToString,
            mafia__pb2.CreateGameResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def JoinGame(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mafia.Mafia/JoinGame',
            mafia__pb2.JoinGameRequest.SerializeToString,
            mafia__pb2.JoinGameResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListPlayers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mafia.Mafia/ListPlayers',
            mafia__pb2.ListPlayersRequest.SerializeToString,
            mafia__pb2.ListPlayersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mafia.Mafia/GetRole',
            mafia__pb2.GetRoleRequest.SerializeToString,
            mafia__pb2.GetRoleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GameProcess(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/mafia.Mafia/GameProcess',
            mafia__pb2.GameProcessRequest.SerializeToString,
            mafia__pb2.GameProcessResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VoteDay(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mafia.Mafia/VoteDay',
            mafia__pb2.VoteDayRequest.SerializeToString,
            mafia__pb2.VoteDayResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VoteNight(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mafia.Mafia/VoteNight',
            mafia__pb2.VoteNightRequest.SerializeToString,
            mafia__pb2.VoteNightResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Check(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mafia.Mafia/Check',
            mafia__pb2.CheckRequest.SerializeToString,
            mafia__pb2.CheckResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Publish(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mafia.Mafia/Publish',
            mafia__pb2.PublishRequest.SerializeToString,
            mafia__pb2.PublishResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
